# ===============================================================
# Mastodon 本地备份工具 - 配置文件 (本地运行用)
# 运行在 GitHub Actions 时，程序会优先使用环境变量，此文件不会被读取。
# 如果你想在本地运行脚本，请将此文件重命名为 "config.yaml" 并填写信息。
# ===============================================================

mastodon:
  # 你的 Mastodon 实例 URL (例如: "https://mastodon.social")
  instance_url: "https://mastodon.social"

  # 你的 Mastodon 用户 ID (一串数字)
  # 如何获取: 访问 https://<你的实例地址>/api/v1/accounts/lookup?acct=<你的用户名>
  # 假设你的实例是 `mastodon.social`，用户名是 `YourUsername`，那么 URL 就是：
  # `https://mastodon.social/api/v1/accounts/lookup?acct=YourUsername`
  # 访问这个 URL，页面上会显示一些 JSON 文本
  # 找到 `"id":` 字段，它后面引号里的一长串数字就是你的用户 ID，复制这串数字。
  user_id: "YOUR_USER_ID"

  # 你的 Mastodon API 访问令牌
  # 如何获取: 前往 首选项 -> 开发 -> 新建应用，赋予 read:statuses 权限
  access_token: "YOUR_ACCESS_TOKEN"

backup:
  # 本地备份的绝对路径
  # Windows 示例: "C:/Users/YourUser/Documents/backup"
  # macOS/Linux 示例: "/Users/yourname/Documents/backup"

  path: "."
  # 在本地中用于存放 Mastodon 笔记的文件夹名称
  # 如果文件夹不存在，程序会自动创建
  posts_folder: "mastodon"
  filename: "archive.md"
  media_folder: "media"

  # 增量同步时，检查最近多少条帖子是否有编辑。
  # 增加此数值可以覆盖更早的编辑，但会增加运行时间和 API 调用次数。
  check_edit_limit: 40
  
# ===============================================================
# 高级设置 (一般无需修改)
# ===============================================================
sync:
  # 用于记录上次同步状态的文件名
  state_file: "sync_state.json"
